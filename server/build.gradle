plugins {
    id 'org.springframework.boot' version '2.3.0.M3'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'



/***********************************************************************************************
 * Gradle Project Properties
 * https://docs.gradle.org/current/javadoc/org/gradle/api/package-summary.html
 ***********************************************************************************************/
project.version = " 0.0.1-SNAPSHOT build ?"

// Java plug jar Properties
sourceCompatibility = '12'
targetCompatibility = '11'

// Spring bootJar Properties 
bootJar {
    archiveFileName = "mutual-aid-suite.jar"
    archiveVersion = project.version
    mainClassName = 'com.cantstopcbus.mutualaidcolumbus.MutualAidColumbusApplication'
    launchScript()
}

// Spring Boot Plugin Properties
springBoot {
    mainClassName = 'com.cantstopcbus.mutualaidcolumbus.MutualAidColumbusApplication'

    // Generate build information for Spring Boot Actuator's info endpoint
    buildInfo {
        properties {
            artifact = 'mutual-aid-columbus'
            version = project.version
            group = project.group
            name = 'Mutal Aid Columbus Suite'
            time = null
        }
    }
}

// Expand properties to be pulled into Spring Boot application.properties file
// https://www.baeldung.com/spring-boot-auto-property-expansion
// https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-properties-and-configuration

processResources {
    def props = ["version":version]
    filesMatching ('**/application.properties') {
        expand props
    }

    filesMatching ('**/application-*.properties') {
        expand props
    }
}


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation project(':client')

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
}

test {
    useJUnitPlatform()
}
